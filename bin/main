#!/usr/bin/env ruby
# rubocop: disable Metrics/PerceivedComplexity, Metrics/CyclomaticComplexity

def disply_board(array)
  position = 0
  while position < array.length
    if (position % 3).zero?
      print "\n"
      print "---+---+---+\n"
    end
    print " #{array[position]} |"
    position += 1
  end
  print "\n---+---+---+\n"
  print "\n\n\n\n"
end

def check_input(array, char, player, loc, usedd)
  while loc.is_a?(String)
    print "#{player}, choose a position from (0-8) to place in the board: "
    loc = gets.chomp
    if loc =~ /[0-8]/ && loc.to_i.between?(0, 8) && loc.to_i <= array.length
      loc = loc.to_i
      loc = gets.chomp.to_i while taken?(loc, usedd)
      array[loc] = char
      disply_board(array)
    elsif loc.to_i > array.length - 1
      print "This number is too greater \n"
    elsif loc.to_i.negative?
      print "No negatvie numbers allowed \n"
    end
  end
end
system('clear') || system('cls')

def same_char(player, char1, char2)
  while char1 == char2
    print "#{player}, please choose another token. That one is already taken \n"
    print "\nWhich character do you want to use #{player}?: "
    char2 = gets.chomp
  end
  char2
end

def taken?(pos, array)
  if array.count(pos).zero? || array.empty?
    array << pos
    false
  else
    print 'This number is already taken.'
    print 'Choose another number'
    true
  end
end

system('clear') || system('cls')
board = %w[0 1 2 3 4 5 6 7 8]
used = []
system('clear') || system('cls')
puts "Welcome to our amazing Tic Tac Toe !!\n\n\n"

print 'Pseudo of Player 1: '
player1 = gets.chomp
print "\nWhich character do you want to use #{player1}?: "
character1 = gets.chomp
system('clear') || system('cls')

print 'Pseudo of Player 2: '
player2 = gets.chomp
print "\nWhich character do you want to use #{player2}?: "
character2 = gets.chomp
system('clear') || system('cls')
character2 = same_char(player2, character1, character2)

system('clear') || system('cls')

print "Great ! #{player1} and #{player2} let start the battle !!\n\n\n\n"
disply_board(board)

i = 0
locate = ''
while i < (board.length / 2).to_i
  check_input(board, character1, player1, locate, used)
  locate = ''
  check_input(board, character2, player2, locate, used)
  i += 1
end
# rubocop: enable Metrics/PerceivedComplexity, Metrics/CyclomaticComplexity

